@startuml

frame "Monitoring stack" as stack {
    [Prometheus] << rycus86/prometheus >> as prometheus #8f8
    [Prometheus node exporter] << rycus86/prometheus-node-exporter >> as node_exporter #8fc
    [Container metrics] << rycus86/container-metrics >> as container_metrics #8fc
    [Grafana] << rycus86/grafana >> as grafana #fcc
    [Portainer] << portainer/portainer >> as portainer #fcc
    [Portainer agent] << portainer/agent >> as portainer_agent #fcc
    [Release Watcher] << rycus86/release-watcher >> as release_watcher #88f
    [GitHub exporter] << rycus86/github-exporter >> as github_exporter #8fc
    [Docker Hub exporter] << rycus86/dockerhub-exporter >> as dockerhub_exporter #8fc

    [PyGen config generator] << rycus86/docker-pygen >> as pygen #ff8

    (Docker engine) as docker #ccc

    node "Other Swarm nodes" {
        [Prometheus node exporter] << rycus86/prometheus-node-exporter >> as node_exporter_2 #8fc
        [Container metrics] << rycus86/container-metrics >> as container_metrics_2 #8fc
        [Portainer agent] << portainer/agent >> as portainer_agent #fcc

        [PyGen worker] << rycus86/docker-pygen:worker >> as pygen_worker #ff8
    }
}

cloud "Internal network" as intnet #ccc

frame "Web stack" as web_stack {
    [Nginx reverse proxy] << nginx >> as nginx #ccc
}

frame "3rd party" as 3rd_party #ccc {
    [GitHub] #aaf
    [Docker Hub] #aaf
    [PyPI] #aaf
    [JetBrains] #aaf
}

frame "Logging stack" {
    [Fluentd] #ccc
}

nginx --> grafana : metrics.viktoradam.net
grafana --> prometheus : Query
grafana <.. prometheus
pygen -u-> prometheus : Generate & reload \n configuration
pygen_worker -u-> pygen : Send events

prometheus .l.> node_exporter
prometheus .r.> container_metrics
prometheus ..> pygen
prometheus ..> github_exporter
prometheus ..> dockerhub_exporter
prometheus ...> node_exporter_2 : Collect metrics
prometheus ...> container_metrics_2
prometheus ...> pygen_worker

node_exporter .. node_exporter_2
container_metrics .. container_metrics_2

intnet --> portainer
portainer -- portainer_agent
portainer_agent -l- docker
container_metrics -u-- docker

release_watcher --> 3rd_party
github_exporter --> 3rd_party
dockerhub_exporter --> 3rd_party

stack -u-> [Fluentd]
stack -u-> [Fluentd]
stack -u-> [Fluentd] : Send logs

@enduml